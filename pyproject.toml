[project]
name = "python-polylith-editable-projects"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "databricks-sqlalchemy>=2.0.6",
    "pyspark>=4.0.0",
    "sqlalchemy>=2.0.41",
]

[dependency-groups]
dev = [
    "polylith-cli>=1.26.0",
    "pytest>=8.2.2",
    "pytest>=7.1.3",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.11.1",
    "pytest-sugar>=1.0.0",
    "pytest-mypy>=1.0.1",
    "pylint-pytest>=1.1.7",
]


[build-system]
requires = ["hatchling", "hatch-polylith-bricks"]
build-backend = "hatchling.build"

[tool.hatch.build]
dev-mode-dirs = ["components", "bases", "development", "test", "."]

[tool.hatch.build.targets.wheel]
packages = ["my_namespace"]
# include = ["my_namespace/*"]
# sources = ["my_namespace"]


[tool.hatch.build.hooks.polylith-bricks]
# this section is needed to enable the hook in the build process, even if empty.

# [tool.hatch.build.targets.wheel]
# include = [
#     "./*",
#     "bases/*",
#     "components/*",
#     "development/*",
# ]
# sources = [
#     ".",
#     "bases",
#     "components",
#     "development",
# ]
# only-packages = true

[tool.polylith.bricks]
"bases/my_namespace/my_example_base" = "my_namespace/my_example_base"
"bases/my_tdd_base/src/my_namespace/my_tdd_base" = "my_namespace/my_tdd_base"
"components/my_namespace/my_example_component" = "my_namespace/my_example_component"
"components/my_namespace/my_component" = "my_namespace/my_component"

[tool.uv]
cache-keys = [
    { file = "pyproject.toml" },
    { git = { commit = true, tags = true } },
]
dev-dependencies = [
    "nox>=2025.2.9",
    "polylith-cli>=1.20.1",
    "python-polylith-editable-projects",
    "pytest>=8.2.2",
    "pytest-sugar>=1.0.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "sf-hamilton[lsp,sdk,ui,visualization]>=1.79.0",
]

[tool.uv.sources]
python-polylith-editable-projects = { workspace = true }

[tool.pytest.ini_options]
consider_namespace_packages = true
mock_use_standalone_module = false
testpaths = ["test"]
addopts = [
    "--import-mode=importlib",
    "--pdbcls=IPython.terminal.debugger:TerminalPdb",
    "--showlocals",
    "--tb=long",
    "-vvv",
]
cache_dir = ".venv/pytest-cache"
filterwarnings = [
    "ignore:.*distutils Version classes.*packaging.version:DeprecationWarning",
]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "[pytest][%(asctime)s][%(levelname)s][%(module)s][%(funcName)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_level = "INFO"
